name: check

on:
  push:
    branches:
      - main
      - release-**
  pull_request:
    branches:
      - main
      - release-**

jobs:
  resolve-modules:
    name: Resolve modules
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - id: set-modules
        run: |
          PATHS=$(find . -mindepth 1 -maxdepth 1 -type f -name go.mod -printf '{"workdir":"%h"},')
          echo "modules={\"include\": [${PATHS%?}]}" >> $GITHUB_OUTPUT
          echo "I have stored: ${GITHUB_OUTPUT}"
  check:
    runs-on: ubuntu-latest
    strategy:
        matrix:
            go: ["1.23.5"]
            modules: ${{ needs.resolve-modules.outputs.modules }}
    name: Go ${{ matrix.go }}
    needs: resolve-modules
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
          cache-dependency-path: "**/*.sum"

      - name: download dependencies
        run: |
            cd ${{ matrix.modules.workdir }}
            go mod download

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          working-directory: ${{ matrix.modules.workdir }}

      - name: build all artifacts
        run: |
            cd ${{ matrix.modules.workdir }}
            go build ./...

      - name: test all artifacts
        run: |
            cd ${{ matrix.modules.workdir }}
            go test ./...

      - name: check
        run: |
          if [ ! -z "`git status -s`" ]; then
            echo "Following files are not consistent with CI:"
            git status -s
            git diff
            exit 1
          fi
